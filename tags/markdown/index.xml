<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>markdown on 生息</title>
    <link>/tags/markdown/</link>
    <description>Recent content in markdown on 生息</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>xaringan &#43; remark.js 制作幻灯片</title>
      <link>/s/21/10/xaringan-and-remarkjs/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/s/21/10/xaringan-and-remarkjs/</guid>
      <description>class: center, middle, inverse, title-slide
xaringan + remark.js 制作幻灯片 👁 sanchufy 2021-10-05  官方教程 .pull-left[
xaringan  R Markdown 扩展，可结合 remark.js 生成 HTML5 演示文档。
 简明版 Presentation Ninja with xaringan 书籍章节 Chapter 7 xaringan Presentations Wiki 版 yihui/xaringan/wiki ]  .pull-right[
remark.js  使用 JavaScript 和 CSS 将 Markdown 在浏览器内渲染成幻灯片。
 简明版 remark Wiki 版 gnab/remark/wiki ]   两者的主要区别，见：https://slides.yihui.org/xaringan/#15
 class: inverse, middle, center
remark.js Markdown 制作幻灯片（基础） 🎞🎞🎞  remark.</description>
    </item>
    
    <item>
      <title>Markdown 简明指南</title>
      <link>/s/21/10/markdown-intro/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/s/21/10/markdown-intro/</guid>
      <description>Markdown vs. Word vs. 其它     Word .blue[Markdown] HTML     格式 开放的 XML 的封装 简单标记的纯文本 复杂标记的纯文本   模式 内容、样式同步处理 以内容为主，样式单独设定 通过其它工具生成内容，样式另设定   阅读 所见即所得 (WYSIWYG) 可渲染成多种其它格式 浏览器中查看，可交互   编辑 仅特定软件可以编辑 任意文本编辑器可编辑 鲜少人工直接编辑    其它工具：
 \(\LaTeX\) Microsoft OneNote Adobe Indesign (ID)
&amp;hellip;   其它区别与比较  文件大小 格式转换 版本控制 Git 表格、脚注、引用等高级样式 常见用途：做笔记、写电子邮件、写论文、写书、写博客文章、制作幻灯片等  ???
Markdown 通常用于对样式要求不高的简单任务，比如做笔记，但随着它与其他技术的整合，Markdown 的扩展也不断壮大，现在能实现的格式、样式和功能已经十分丰富了！
 内在哲学（原则） .</description>
    </item>
    
    <item>
      <title>在 Markdown、R Markdown 中使用表格</title>
      <link>/p/21/08/r-markdown-tables/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/p/21/08/r-markdown-tables/</guid>
      <description>表格形式 Markdown 表格大概有两种，一种是经数据存储格式转换为标准表格样式，通常是整齐的数据或文本（这里暂称为“转换的数据表格”）；另一种是手动输入为表格形式，一般是为了便于组织内容，使文本更清晰易读（这里暂称为“输入的文本表格”）。
转换的数据表格 在 R Markdown 中可以通过各种包（packages）将数据转为表格形式。在 R Markdown Cookbook 一书中主要介绍了两种方式，knitr::kable() 和 kableExtra 包，后者是对前者的进一步补充和扩展。
书中还列举了一些其它的包，比如：
 flextable 包，支持多种输出格式 huxtable 包，支持多种输出格式 stargazer 包，支持列表 pixiedust 包，为 broom 包整理后的结果创建表格  结合 broom 等包，可以将统计模型与计算的结果便捷的输出为整洁的表格。
输入的文本表格 Mardown 中的表格需要扩展支持，常见的是简单表（simple tables）和管道表（pipe tables），更为复杂的是网格表（grid tables）。
对于 Markdown 解析器（parsers；标记识别符，markup identifier），R markdown 需要 Pandoc 提供支持；blogdown 依赖 Hugo，其 0.60.0 版以后默认使用 Goldmark 识别，尽管也可使用 Pandoc 或 AsciiDoc 等替代；而常用的源代码托管服务平台 Github 自身也支持 Markdown。下面对这些常用的工具进行简单的了解。
Pandoc Pandoc 目前仍不支持合并单元格，不过它们能将各种类型标记的表格渲染成它们所支持的表格样式，参见Better tables。
 扩展：simple_tables  Right Left Center Default ------- ------ ---------- ------- 1 2 34 56 Table: Demonstration of simple table syntax.</description>
    </item>
    
  </channel>
</rss>
