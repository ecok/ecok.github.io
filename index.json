[{"content":"参考来源 Ben Forta (福达). 杨涛等译. 2015. 正则表达式必知必会（修订版）. 人民邮电出版社. Jan Goyvaerts, Steven Levithan. 2012. Regular Expressions Cookbook, Second edition. O’Reilly Media. Jeffrey E. F. Friedl. 余晟译. 2012. 精通正则表达式. 电子工业出版社. 资源合集：Awesome Regex | Awesome RegEx 其它学习入口： 正则表达式30分钟入门教程 Learn regex the easy way 中文版 by ziishaned 等 | 学习正则表达式的简单方法 by cdoco 等 Reference - What does this regex mean? Regular Expressions Quick Start Wikipedia: Comparison of regular-expression engines class: inverse Regular Expression R、Perl、JavaScript POSIX vs. Perl (Perl-like) R 正则表达式 官方教程：Regular Expressions as used in R 中文教程： 谢益辉《R 语言忍者秘笈》 4.2 正则表达式 黄湘云《数据科学与 R 语言》第 10 章 正则表达式 战立侃：R 使用的正则表达式 王敏杰《数据科学中的 R 语言》数据科学中的 R 语言 李东风《R语言教程》36 R 语言的文本处理 R 中的设定与实现 ERE (Extended Regular Expressions) + Perl-like Regular Expressions POSIX 1003.2 + Perl 5.x TRE[wiki] 与 PCRE 引擎（库）的区别，可参考： .smaller[regular expressions in base R: ‘perl=TRUE’ vs. the default (PCRE vs. TRE)] 在不同的 locales（R 进程的语言环境，如 POSIX）与 implementation（实现）中，解释将有所差异 默认贪婪匹配 .footnote[ PCRE: Perl Compatible Regular Expressions POSIX: Portable Operating System Interface for uniX ] ??? ERE 只是 TRE 最主要的一部分？R 是使用了 TRE 中的 ERE，还是整个 TRE？ TRE 包含了？ POSIX 1003.2 extended RE (ERE) basic RE (BRE) TRE extensions to the ERE R 包和扩展 R 包 stringi：Regular Expressions R 包 stringr：Regular expressions R 包 stringx：Drop-in replacements for base R string functions powered by stringi 基础 R 的增强版 R 包 qdapRegex：trinker/qdapRegex 常用匹配模式打包集合 R 包 rex：kevinushey/rex 封装为友好可读的语言 RStudio 扩展 RegExplain：预览匹配结果 R 模式匹配与替换 sub() 替换首个匹配，gsub() 全局替换 grep() 匹配的（或不被匹配的）索引或值，grepl() 返回其逻辑向量 regexpr() 首个匹配的起始位置及其匹配的长度，gregexpr() 向量构成的列表 [1] regexec() 同 [1]，匹配位置和长度，但返回列表，gregexec() 矩阵构成的列表 [2] regmatches() 从 [1][2] 获得的匹配数据中提取或替换匹配的子字符串 agrep()，agrepl() 近似 (approximate) 匹配 match() 完全匹配，charmatch()、pmatch() 部分匹配，startsWith() 匹配字符串的初始部分 strsplit() 拆分字符串 ??? g/re/p: “Global search for Regular Expression and Print matching lines” 一般来说，perl = TRUE 会比默认的正则表达式引擎快，而 fixed = TRUE 也会更快。 命名捕获组 Named Capturing Groups .tiny[ 输入文本： \"Camellia sinensis (L.) O. Ktze. var. sinensis\" 匹配模式： \"(^[A-Z][a-z]+) ([a-z]+)+ (.*?) (var. [a-z]+)\" 对捕获组进行反向引用 (backreferences)： \"\\1, \\2, \\4, \\3\" 返回结果： \"Camellia, sinensis, var. sinensis, (L.) O. Ktze.\" ] PCRE 与 Perl 正则表达式 PCRE - Perl Compatible Regular Expressions Perl regular expressions tutorial 其它非官方： PCRE 正则表达式 Perl 正则表达式语法总结 环视 Lookaround 零宽断言 zero-length assertions，即不消耗字符串中的字符，而只是断言是否有可能匹配。 .large-table[ Assertion Lookbehind Lookahead Positive (?concatenation  | (alternation) concatenation 连接; 并置: foobar alternation 交替; 置换: foo|bar Kleene star 克林星号/Kleene closure 克林闭包: foo* class: inverse, middle 正则表达式是个投入很小回报很大的工具 …… .right[—— old9] **写正则还好，读正则才是痛苦的事。** **正则表达式是可写不可读的。** .right[—— [Patrick95](https://v2ex.com/t/540910?p=1)] **在大多数形式中，如果存在至少一个匹配特定集合的正则表达式，那么就存在无数个同样匹配它的其他正则表达式。** .right[—— [Wikipedia](https://en.wikipedia.org/wiki/Regular_expression)]","title":"正则表达式简明指南","uri":"/s/21/10/regex-intro/"},{"content":" hosts  GitHub Hosts googlehosts/hosts Free Ping Test Tool   mirror  library.ac.cn iData知识搜索 G00gle浙大 Google-Mirrors   cloudflare workers  booster-labs/rocket-booster netptop/siteproxy EtherDream/jsproxy SeaHOH/GotoX   SoftEtherVPN heroku  mixool/xrayku onplus/shadowsocks-heroku womginx   IPV6  EUserv    ","title":"飞檐走壁，漫山越岭","uri":"/n/21/10/over-the-wall/"},{"content":"class: center, middle, inverse, title-slide\nxaringan + remark.js 制作幻灯片 👁 sanchufy 2021-10-05  官方教程 .pull-left[\nxaringan  R Markdown 扩展，可结合 remark.js 生成 HTML5 演示文档。\n 简明版 Presentation Ninja with xaringan 书籍章节 Chapter 7 xaringan Presentations Wiki 版 yihui/xaringan/wiki ]  .pull-right[\nremark.js  使用 JavaScript 和 CSS 将 Markdown 在浏览器内渲染成幻灯片。\n 简明版 remark Wiki 版 gnab/remark/wiki ]   两者的主要区别，见：https://slides.yihui.org/xaringan/#15\n class: inverse, middle, center\nremark.js Markdown 制作幻灯片（基础） 🎞🎞🎞  remark.js 核心功能  支持 Markdown，可版本控制 支持各种快捷键（按 h 或 ? 可查看）  按 c 复制演示窗口 按 p 进入演讲者模式 按 f 全屏模式   支持语法高亮 支持背景图片 支持线上托管浏览，若离线使用，需下载本库（最新版）   layout: true\nremark.js 语法设计   幻灯片划分 幻灯片递增显示（类似动画效果）  两个短横线 -- 使用 layout   幻灯片模板（单个页面）：template 幻灯片属性：  命名 (name)：用于创建链接锚点、导航、识别与引用等 定义样式 (class)：用于对齐等 使用模板 (template、layout)   class：为不同“类”的内容便捷地设定特定的样式，形如：.footnote[Note: this is a useless footnote]    幻灯片注释、隐藏 全幅背景图片：background-image: url(image.jpg) 内容属性：定义样式 (Content Classes)：搭配 CSS 设定元素样式 语法高亮：代码块、行内  支持的语言，如 DOS、Markdown 等 支持的风格，如 github、solarized-light 等   幻灯片页面比例、计时等   layout: false\n保存与使用  打印、保存为 PDF：Printing、Printing Export to PDF 网页离线使用：Offline use without an internet connection   class: inverse, middle, center\n xaringan R Markdown 制作幻灯片（扩展）  xaringan 功能与扩展*  通过设置 YAML 元数据，传递参数给 remark.js 支持运行 R 代码 自动渲染 \\(\\LaTeX\\) 数学公式 可自动生成首页，即标题页 自动播放与计时（含倒计时） 代码行内高亮 自定义 macros，提供 JavaScript 函数扩展 HTML widgets：可交互  .footnote[* 注：一些功能由 remark.js 自带。]\n Infinite Moon Reader 同步编辑与预览：\nxaringan::inf_mr()   幻灯片主题  remark.js 主题：HTML CSS JS samples 查看 xaringan 内置主题：源码、主题展示 Theme Showcase  names(xaringan:::list_css())   详细的 CSS 设定技巧请查看 https://github.com/yihui/xaringan/wiki/ 中的 Customization 部分。例如：编号、切换效果、页眉和页脚、进度条、代码换行与缩进等 其它：  R 包 xaringanthemer 主题美化助手 R 包 fansi 美化终端结果输出 terminal output     保存与使用  打印、保存为 PDF：Export Slides to PDF  使用 R 包 Pagedown：2.3 Print to PDF   网页离线使用：7.6.4 Working offline   部署或嵌入到 (blogdown) 网站中 两种方式：\n xaringan 驱动：以外部对象嵌入到博客的内容页面中  教程：Deploy Slides Online 示例1：The Impact of Sickle Cell…、Deploying xaringan Slides… 示例2：xaringan_gh 优点：灵活，充分使用 xaringan 的全部功能   Hugo 驱动：直接以单独的展示页面作为内容呈现  教程：Using with Hugo 示例：Creating Beautiful Presentations with Story (源码、Hugo 页面渲染模板) 优点：简洁    ???\n可以说是为了备份本页的内容，才有了本指南。小站现在采用了方式 2，可能更好的方案是两个都用。\n class: inverse, middle, center\n 总之，以上不过是对官方教程的简单回顾和粗暴罗列……\n class: inverse, middle, center\n所以，还是去看官方教程吧！ 直接又详尽！ ","title":"xaringan + remark.js 制作幻灯片","uri":"/s/21/10/xaringan-and-remarkjs/"},{"content":"Markdown vs. Word vs. 其它 Word .blue[Markdown] HTML 格式 开放的 XML 的封装 简单标记的纯文本 复杂标记的纯文本 模式 内容、样式同步处理 以内容为主，样式单独设定 通过其它工具生成内容，样式另设定 阅读 所见即所得 (WYSIWYG) 可渲染成多种其它格式 浏览器中查看，可交互 编辑 仅特定软件可以编辑 任意文本编辑器可编辑 鲜少人工直接编辑 其它工具： \\(\\LaTeX\\) Microsoft OneNote Adobe Indesign (ID) … 其它区别与比较 文件大小 格式转换 版本控制 Git 表格、脚注、引用等高级样式 常见用途：做笔记、写电子邮件、写论文、写书、写博客文章、制作幻灯片等 ??? Markdown 通常用于对样式要求不高的简单任务，比如做笔记，但随着它与其他技术的整合，Markdown 的扩展也不断壮大，现在能实现的格式、样式和功能已经十分丰富了！ 内在哲学（原则） .smaller[ A Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. — John Gruber ] – .blue[易写，且易读] 试试几个在线的 Markdown 编辑器 来！直观感受一下* 中文 Editor.md Arya Cmd Markdown 英文 Dillinger StackEdit tui.editor SimpleMDE .footnote[ * 左边编辑，右边预览 ] 本地编辑器 推荐 Typora 或 RStudio 作为辅助功能的文本编辑器，如： Leanote、Atom、VS Code、Notepads 作为主要支持的程序和应用，如：英文 | 中译1 | 中译2 其它： Pandoc Extras Awesome Markdown1、Awesome Markdown2 https://github.com/topics/markdown-editor ??? 不要痴迷于（体验和频繁切换）各种编辑器浪费你原本可以发 Nature 的时间 基本语法（5 分钟可学完） 开山者：John Gruber’s Markdown 提倡标准的、明确的语法规范 CommonMark： CommonMark Spec（含扩展） 其它学习入口： 简明英文版 | 中译版 分步演示教学 中文 Gitbook 版 繁体中文版 Pandoc’s Markdown （不需启用 Extension） 来！看一看下面这些都会了吗？ 标题：Setext (Structure Enhanced Text) 形式、ATX 形式 加粗、.italic[斜体] 缩进与换行 引用：名人名言、诗词等 列表：有序、无序清单列表 水平分割线 网址链接、图片链接 扩展语法（高手进阶） Pandoc’s Markdown （需启用 Extension） GitHub Flavored Markdown Spec 其它学习入口： 简明英文版 | 中译版 来！挑战一下两大派各自的招式 删除线，上标、下标，脚注 任务清单 表格：简表 Simple、多行 multiline、网格 grid、管道 pipe 公式：Cmd Markdown 公式指导手册 行内代码、代码块 链接：参考式、引用式、标题识别符、交叉引用等 参考文献 YAML元数据块 原始 HTML ??? 大致是这些，并未涵盖所有可用的扩展 解析器 不下数十种，比如这个列表所示：markdown parser Pandoc: Typora、R Markdown Goldmark: Hugo（与 CommonMark 0.30 兼容） remark: remark.js、xaringan 辅助工具 Babelmark3: 比较不同的解析与实现 Tables Generator: 简易表格生成器 HTML Cleaner: HTML 编辑与清洗 推荐的普通笔记流程 使用 Typora 等编辑器创建 Markdown (.md) 本地文档 使用 Git 进行版本控制 在 Github 中创建一个仓库，将笔记推送至仓库进行备份保存 渲染成其它格式用于浏览或打印，如生成博客文章、书籍内容或使用 Obsidian 进行知识管理等 试试看： 将一份已有的笔记整理为 Markdown 文档，并输出为 HTML 格式！ – 咳咳，还没完成呢，就想偷偷瞄下一张…… – 还摁摁摁…… class: center, middle, inverse 进阶 ~ ~ ~ ~ ~ (:３っ)כּ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ layout: true 一个用 Pandoc 生成 HTML 的示例 安装 Pandoc* 建议将 Pandoc 添加至系统路径（或用户路径） 在你存放 Markdown 文档 (.md) 的地方，运行下方的命令： 默认主题 .small[convert from markdown to html and put the output in a standalone file] pandoc .md -f markdown -t html -s -o .html .footnote[ * 如果使用 Typora 编辑器，或在 R 中安装了 rmarkdown 包，电脑上可能已自动安装了 Pandoc ] 自定义主题 .smaller[ 下载此模板：GitHubModified.html5*，存放至： .center[%HOME%/Appdata/Roaming/pandoc/templates/] 如下，可生成含目录 (Table of Content) 的独立文档： ] pandoc \".md\" -o \".html\" -f markdown --template GitHubModified.html5 --toc --mathjax --self-contained .footnote[ * 在 Github.html5 + toc-sidebar.html 的基础上，并参考 GitBook 风格所修改 ] layout: false 一些 Markdown 主题 很多编辑器自身附带多种 Markdown 主题，可以在各自的菜单中直接导出相应主题的格式文档。 Typora 中的主题 Pandoc 默认模板 tajmone/pandoc-goodies Mushiyo/pandoc-toc-sidebar kjhealy/pandoc-templates jez/pandoc-starter maehr/academic-pandoc-template Wandmalfarbe/pandoc-latex-template R Markdown Gallery R 中的 Markdown 江湖 .pull-left[ rmarkdown .tiny[与 R 分析、作图结合，实现 文学化编程 (Literate Programming)] bookdown .tiny[在 R Markdown 基础上扩展， 制作书籍] ] .pull-right[ blogdown .tiny[与 Hugo 结合，创建静态网站] pagedown .tiny[对上述创作内容，使用网页排版与打印技术，生成 PDF 文档] ] R Markdown 速查表：cheatsheet 示例作品：Gallery 发布平台：RPubs 博客或个人网站建站实例：Rbind class: center, middle, inverse 小有初成，大闹一场 行云流水，任意所至 ","title":"Markdown 简明指南","uri":"/s/21/10/markdown-intro/"},{"content":"再挂一个早期写的脚本，不求优雅但求实用。\n尽管学术和科技内容，个人更偏好谷歌检索，但也不否认每个搜索引擎都有其各自的长处。比如，百度中可查用户标记的骚扰电话，必应的货币转换识别似乎比谷歌更友好，等等。倘若，完成一次检索后，想再查看另一搜索引擎的结果，一般的操作当然是先复制检索词，然后打开另一搜索引擎的网页，再粘贴检索词，最后回车查看。可是促使世界不断进步的“懒”人，肯定不能安于这种不时再三重复的机械劳动。\n这个脚本就是为了解决这一痛点写的，它支持在以下的任意搜索引擎中，通过一个快捷键（加粗的字母表示）自动跳转至另一搜索引擎，并采用与跳转前的页面相同的检索词进行检索：\n g: 谷歌镜像 b: 必应 x: 学术镜像（谷歌） d: 度娘 s: 山寨蒙面谷歌1  （注意：在同一个页面内跳转，即覆盖原检索页面）\n功能简单，没什么好展示的了，这里是脚本链接。\n  与谷歌搜索的结果一致，但提供更好地匿名性和隐私保护功能。 ↩︎\n   ","title":"搜索引擎之间一键相互跳转脚本","uri":"/p/21/09/userscript-one-click-jumping/"},{"content":"我们在阅读文章时，有些字词是我们特别想要关注的，幻想如果被标记出来，势必会读得飞起。在浏览器中这可以使用搜索功能，使某些词（即检索词）高亮显示，但毕竟这种姿势也太不“懒”了。故闲暇又水了一个浏览器用户脚本 (userscript)1，通过自行设定想要关注的一至多个主题词（允许使用正则表达式），当文章中一旦出现这些主题词时则自动以高亮显示。结合之前的翻译脚本，又可以愉快的看文献了！ 已支持的网站有： Inoreader 或 Innoreader Wiley ScienceDirect (Elsevier) Springer Nature Science PNAS 目前主题词的设定，需直接写入脚本中，这是一个示例： var letI_Wrapper = new wrapTextWithElement ('conservation|\\ biological\\\\s*\\\\w*\\\\s*\\\\w*\\\\s*invasion|\\ restoration|ecosystems?'), ''); 它匹配了如下这些词： conservation biological * invasion：此处 * 表示允许词组中间出现任意长度的 0 至 2 个词（含数字） restoration ecosystem 或 ecosystems 在脚本中修改对应位置的主题词，即可实现适合自己的自定义设置。 以下是部分效果展示： Figure 1: Innoreader 主题词高亮 Figure 2: Wiley 主题词高亮 Figure 3: Elsevier/ScienceDirect 主题词高亮 Figure 4: Springer 主题词高亮 本人并没有学过 Javascript，这个脚本毫无意外是东拼西凑形成的，遑论组合得优不优雅了，倘始遇到 bug 不要惊慌就是了。 抄袭参考来源如下并表示感谢： How to change the color of one specific letter on a web page (wrap the text)? waitForKeyElements.js 翻译机 前一个是：科技文章标题翻译脚本 ↩︎ ","title":"科技文章自定义词语高亮显示","uri":"/p/21/09/userscript-scientific-article-word-highlight/"},{"content":"最开始是看到小伙伴在开始选题时，在 Web of Science 上使用划词翻译软件快速阅读、筛选大量相关文章——一篇一篇取词、翻译、再取词、再翻译……当然，这是我们大家都很熟悉的动作了。当时，深深觉得这应该是脚本很适合干的活儿。 最近便发现一个十分强大的用户脚本——翻译机：该脚本用于翻译各类常用社交网站为中文，不会经过中间服务器，可以实现这样的功能。这个脚本格式清晰，也比较好入手\"借鉴抄袭\"。Ta 已经把最核心的调用翻译工具的代码都写好了，并且设定了很友好的框架逻辑，看起来剩下的只要会简单的 CSS 选择器，就可以很方便地\"移植抄袭\"了。 原脚本支持的翻译网站仅是社交网站，未免太浪费了。内置的翻译源包括：谷歌翻译、有道翻译、 彩云小译、必应翻译等 8 种以上主流的来源1，已经非常强大够用了。 接下来，我们试着加入科技学术论文数据库网站，实现标题的自动翻译。 Web of Science CSS 选择器： 支持检索页、详情页； 仅一个标题时翻译，多标题时不翻译2，例如，含英文及中文标题时，则不翻译; 已知的 bug：经翻译的详情页无法通过标题上方的 Results 链接返回结果页，该链接被吞。 'WebofScience':{ name:'WebofScience', matcher:/https:\\/\\/.*?.webofscience.com\\/.+/, selector:baseSelector('app-summary-title  \\ h3.ng-star-inserted:only-child, \\ #snMainArticle  div:nth-child(1)  div:only-child \\ #FullRTa-fullRecordtitle-0[class=\"title text--large\"]'), textGetter:baseTextGetter, textSetter:baseTextSetter } 效果展示： Figure 1: WOS 检索页标题翻译 Figure 2: WOS 详情页标题翻译 详情页中的 DOI 跳转和复制按钮使用了另一脚本实现。 Google Scholar CSS 选择器： 'GoogleScholar':{ name:'谷歌学术', matcher:/https:\\/\\/(scholar.google.com|en.yaodeyo.com:92)\\/.+/, selector:baseSelector('.gs_ri  h3 a'), textGetter:baseTextGetter, textSetter:baseTextSetter } 效果展示： Figure 3: 谷歌学术 - 谷歌翻译 Figure 4: 谷歌学术镜像 - 有道翻译 Inoreader/Innoreader CSS 选择器： 'Inoreader':{ name:'Inoreader', matcher:/https:\\/\\/.*?.inn?oreader.com\\/.+/, selector:baseSelector('div[class^=\"article\"][class$=\"title\"]  a, \\ div[class~=\"article_title\"]  a'), textGetter:baseTextGetter, textSetter:baseTextSetter } 效果展示： Figure 5: Inoreader 订阅器 - 分列模式 Figure 6: innoreader 订阅器 - 卡片模式 提示 一般的用户脚本安装指南 免费服务，就不要恶意频繁地请求了，不然会经常看到翻译报错 目前不确定这个脚本的开源许可协议，权作自用 本脚本很好扩展至其它网站（含镜像站），若有其它好的建议，可下方留言/评论 这些翻译通常是使用的公共免费服务，一般均有访问频次、每日访问次数等限制，因此是不稳定的，更好地体验可以自行申请 API。 ↩︎ 目的是为了有中文标题时，则不翻译。但这应该无法单纯通过 CSS 选择器完美实现，要么另写 jQuery/JS 选择，要么就是如此这般一刀切。 ↩︎ ","title":"科技文章标题翻译脚本","uri":"/p/21/08/userscript-scientific-article-title-translation/"},{"content":" 更新： 2021-08-06 添加三因素及多因素，各因素组内的多重比较 警示：水平有限，以下内容均有可能存在错漏！ 如有发现，请下方留言或提交 pull request，感谢您的贡献！ 仅供参考的示例； 没有通用的模板。 了解统计更重要； 照搬后果请自负。 本分析以多物种、双因素为例，展示常用的方差分析的 R 实现。当然，通过少量的调整，也可以向下兼容：单物种、单因素；也可能向上兼容：三因素至多因素。例如，“三因素”可假想成“双因素中的一个因素再包含一双因素”，一些双因素的函数通过自我函数嵌套，可实现扩展。 一个分析需求，常常对应着多种 R 实现，本示例列举了常用的几种。有些采用 R 中常用的批量（如循环、重复、分组等）计算方式，尽可能地避免使用大量重复代码；有些方法为了篇幅的简洁，仅以局部单一情况做演示，但是它们都可以用类似的方式实现批量计算，参照上下文自行调整即可。 本示例原文档下载地址：https://github.com/pftz/pftz/blob/master/content/post/2021-07-23-r-anova/index.Rmd 示例数据 x，自变量，解释变量，预测变量，独立变量，IV (Independent variables) y，因变量，响应变量，结果变量，依赖变量，DV (Dependent variables) 构建示例用数据 # 构建一个伪造的示例数据框 set.seed(110) df F) ## drought 2 0.6133 0.30664 93.43 4.83e-08 *** ## Residuals 12 0.0394 0.00328 ## --- ## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 # 方法二：回归方法 # 默认第一个水平（fertilizer: Control）为参照 levels(df_aa_npk$drought) ## [1] \"D25\" \"D50\" \"D75\" lm_b1dry F) ## drought 2 0.61328 0.306639 93.427 4.829e-08 *** ## Residuals 12 0.03939 0.003282 ## --- ## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 # 方法三：car::Anova library(car) Anova(lm_b1dry) ## Anova Table (Type II tests) ## ## Response: biomass ## Sum Sq Df F value Pr(F) ## drought 0.61328 2 93.427 4.829e-08 *** ## Residuals 0.03939 12 ## --- ## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 手算方差分析平方和（番外） 组间平方和 Sum of Squares due to Treatment (SSTR) the treatment sum of squares the sum of squares for treatments \\[ \\begin{align} SSTR \u0026 = \\sum_{i=1}^k\\sum_{j=1}^n(\\bar x_i-\\bar x')^2 \\\\ \u0026 = \\Sigma_{i=1}^kn_i(\\bar x_i-\\bar x')^2 \\\\ \u0026 = \\sum_{i}n_i(\\overline{Y}_i-\\overline{Y}_{total})^2 \\end{align} \\] 组内平方和 the Sum of Squares due to Error (SSE) the error sum of squares the sum of squares of the residual error \\[ \\begin{align} SSE \u0026 = \\sum_{i=1}^k\\sum_{j=1}^n(x_ij-\\bar x_i)^2 \\\\ \u0026 = \\sum_{i}\\sum_{j}(Y_{ij}-\\overline{Y}_i)^2 \\end{align} \\] #- 组间平方和 within groups，处理误差 # 5 个重复 sum((tapply(df_aa_npk$biomass, df_aa_npk$drought, mean) - mean(df_aa_npk$biomass))^2)*5 ## [1] 0.6132778 #- 组内平方和 between groups，随机误差 # 4 个物种 sum((tapply(df_aa_npk$biomass,df_aa_npk$drought,var)))*4 ## [1] 0.0393857 双因素 本示例为重复试验、非重复测量。 分析不同物种、不同种植密度、不同施肥处理对产量的影响，即把物种也视为一种处理（不推荐）： # 不含交互项 aov_b2main F) ## drought 2 0.83730 0.41865 187.567 2.234e-15 *** ## fertilizer 1 0.02441 0.02441 10.935 0.002963 ** ## drought:fertilizer 2 0.07114 0.03557 15.936 3.947e-05 *** ## Residuals 24 0.05357 0.00223 ## --- ## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## ## $BB ## Analysis of Variance Table ## ## Response: biomass ## Df Sum Sq Mean Sq F value Pr(F) ## drought 2 0.66154 0.33077 136.2385 7.919e-14 *** ## fertilizer 1 0.01243 0.01243 5.1195 0.03299 * ## drought:fertilizer 2 0.02671 0.01336 5.5011 0.01080 * ## Residuals 24 0.05827 0.00243 ## --- ## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## ## $CC ## Analysis of Variance Table ## ## Response: biomass ## Df Sum Sq Mean Sq F value Pr(F) ## drought 2 0.72532 0.36266 607.291 F) ## drought 2 0.81257 0.40629 478.368 |t|) ## D50 - D25 == 0 0.37255 0.03623 10.28 2000 时 检验方差齐性 Bartlett test Fligner-Killeen test Brown-Forsythe test Levene’s test # 残差分析 par(mfrow = c(2, 2)) plot(lrm_b2mix_sp$AA) Figure 20: 回归检验组图 # 使用隐式循环批量作图 par(mfrow = c(4, 4)) lapply(lrm_b2mix_sp, plot) Figure 21: 回归检验组图 ## $AA ## NULL ## ## $BB ## NULL ## ## $CC ## NULL ## ## $DD ## NULL # 实际值（观测值）与拟合值（预测值） par(mfrow=c(1,1)) plot(lrm_b2mix_sp$AA$fitted.values ~ lrm_b2mix_sp$AA$model$biomass) Figure 22: 拟合效果图 # Q-Q 图 qqplot() # library(car) qqPlot(lrm_b2mix_sp$AA$residuals, main = \"QQ Plot\") lapply(lrm_b2mix_sp, function(x) shapiro.test(resid(x))) # 方差齐性 with(df, by(df, species, function(d) bartlett.test(biomass ~ interaction(drought, fertilizer), d))) # library(car) # 'levene.test()' is defunct. with(df, by(df, species, function(d) leveneTest(biomass ~ drought*fertilizer, d))) fligner.test() HH::hov() # 离群点/异常值 car::outlierTest(lrm_b2mix_sp$AA) ## rstudent unadjusted p-value Bonferroni p ## 61 -5.82263 6.2157e-06 0.00018647 三因素及多因素 这里假设除了干旱、施肥外，物种也视为一种处理，例如本地种和入侵种，尽管如此，应该理解为分组变量更合适。如果物种较多（≥ 5），有时用混合线性模型可能更适合，具体依科学问题而定。 现在假设有了三个处理，在每两个处理一致的情况下，进行另一处理组内的多重比较。 # 加载自定义的函数，用于各因素内各水平的多重比较 # source('fun_mulcomp_tukey.R', encoding = 'UTF-8') # 三因素组内比较 comp_hsd_b3in_DIY2 ","title":"R 方差分析：以多物种、双因素为例","uri":"/p/21/08/r-anova/"},{"content":"表格形式 Markdown 表格大概有两种，一种是经数据存储格式转换为标准表格样式，通常是整齐的数据或文本（这里暂称为“转换的数据表格”）；另一种是手动输入为表格形式，一般是为了便于组织内容，使文本更清晰易读（这里暂称为“输入的文本表格”）。 转换的数据表格 在 R Markdown 中可以通过各种包（packages）将数据转为表格形式。在 R Markdown Cookbook 一书中主要介绍了两种方式，knitr::kable() 和 kableExtra 包，后者是对前者的进一步补充和扩展。 书中还列举了一些其它的包，比如： flextable 包，支持多种输出格式 huxtable 包，支持多种输出格式 stargazer 包，支持列表 pixiedust 包，为 broom 包整理后的结果创建表格 结合 broom 等包，可以将统计模型与计算的结果便捷的输出为整洁的表格。 输入的文本表格 Mardown 中的表格需要扩展支持，常见的是简单表（simple tables）和管道表（pipe tables），更为复杂的是网格表（grid tables）。 对于 Markdown 解析器（parsers；标记识别符，markup identifier），R markdown 需要 Pandoc 提供支持；blogdown 依赖 Hugo，其 0.60.0 版以后默认使用 Goldmark 识别，尽管也可使用 Pandoc 或 AsciiDoc 等替代；而常用的源代码托管服务平台 Github 自身也支持 Markdown。下面对这些常用的工具进行简单的了解。 Pandoc Pandoc 目前仍不支持合并单元格，不过它们能将各种类型标记的表格渲染成它们所支持的表格样式，参见Better tables。 扩展：simple_tables Right Left Center Default ------- ------ ---------- ------- 1 2 34 56 Table: Demonstration of simple table syntax. 扩展：pipe_tables | Right | Left | Default | Center | |------:|:-----|---------|:------:| | 12 | 12 | 12 | 12 | : Demonstration of pipe table syntax. 扩展：grid_tables : Sample grid table. +---------------+---------------+--------------------+ | Fruit | Price | Advantages | +===============+===============+====================+ | Bananas | $1.34 | - built-in wrapper | | | | - bright color | +---------------+---------------+--------------------+ GitHub Flavored Markdown, GFM GitHub Flavored Markdown 表格扩展支持管道表，不支持网格表。Goldenmark 采用了 GitHub Flavored Markdown 的表格扩展规范，因此语法相同。 管道表（1） | foo | bar | | --- | --- | | baz | bim | 管道表（2） | abc | defghi | :-: | -----------: bar | baz 其它 Pandoc、GMF 和 Hugo 都不支持单元格跨行（rowspan）、跨列（colspan），即合并单元格（merge cells）。如果要在 Markdown 文档中实现这种合并行或合并列的表格，可采取如下步骤 1： 使用其它工具支持的表格语法创建： MultiMarkdown 仅支持列合并，不支持行合并；支持用空行生成  标签衔接和强调表格的不同部分 Markdig 支持规则矩形的合并行及合并列 在线工具 Madoko，也支持合并列 在本地或 babelmark3 等在线平台生成 HTML 编码及表格预览； 如可正常预览，则复制其 HTML 源码；也可将 HTML 源码粘贴至 HTML-Cleaner 中，进一步微调； 在 Markdown 文档中粘贴此源码，绝大部分编译工具应该支持这种混合的语法。 经个人实践： MultiMarkdown：在本地 PowerShell 中运行命令，中文出现了乱码，而 CMD 中正常，猜测与本地的编码设置有关。如需跨行合并，建议采用上述步骤 3 中的方法实现。 Markdig 目前似乎对中文不够友好，在相同格式情况下，babelmark3 和 Notepad++ 扩展 MarkdownViewerPlusPlus 对英文正确渲染而中文不行。其次，babelmark3 中常常不能对长表格、多个或大号合并单元格正确识别，如果将表格拆分成多次提交，则可拼接成完整表格。 Markdig: Grid Table Markdig 中的网格表语法部分展示如下： +---------+---------+ | Header | Header | | Column1 | Column2 | +=========+=========+ | 1. ab |  This is a quote | 2. cde |  For the second column | 3. f | +---------+---------+ +---+---+---+ | AAAAA | B | +---+---+ B + | D | E | B | + D +---+---+ | D | CCCCC | +---+---+---+ 表格内容 表格标题 Pandoc 扩展：table_captions 另参考本文 Pandoc 示例。 表格脚注 表格样式 HTML 表格一般通过 CSS 设定各种主题（颜色、格式等）。R 中也有一些包或工具帮助科学和技术交流文档实现贴合的主题样式，并且不限于表格，也不限于 HTML 格式。此处简要的罗列几种： RStudio: Distill web framework 创建网络发布格式 rmarkdown::paged_table()：可分页的表格 gt 包和 gtsummary 包：可供出版的分析和汇总表 前面提到过的在线工具 Madoko 也是一个专注于学术和技术文章的 Markdown 解析器。其它可参考：Academic blogging workflow 其它可以了解的包或项目： Output Nice-Looking Formatted Tables sfirke/packagemetrics | tableGallery sjPlot renkun-ken/formattable 后记 2004 年 John Gruber 和 Aaron Swartz 合作开发了 Markdown，这一早期的简单版本在随后十年间得到了大规模的使用，并引入了大量的扩展语法，与此同时也带来了语法多样而混乱的现象，这与最初的 Markdown 设计初衷背道而驰。于是，Pandoc 的开发者 John MacFarlane 连同其它开发者一起发展形成了 CommonMark 这一标准语法规范，旨在让 Markdown 使用起来简单而明确，无论使用何种解析器，都可以得到相似的输出显示。Pandoc、Github、Goldmark 均与 CommonMark 兼容。在这一规范的讨论区，也有对表格长期的讨论，如 Tables in pure Markdown。 上一篇笔记《 R 速查表：标准假设检验》中的表格便是采用了这一流程实现。 ↩︎ ","title":"在 Markdown、R Markdown 中使用表格","uri":"/p/21/08/r-markdown-tables/"},{"content":"常常为了快速查找 R 函数，会把一些功能相近的 R 函数做成速查表（cheat sheets/cheatsheets，也见翻译成小抄、备忘录），便于索引、参考，比如，RStudio 做了很多这种速查表（管理的 Github 仓库）。记得早几年也有过一些流行的中文翻译版，想必难以与原版的更新同步，又正值如今网上资源泛滥，流传得少了。 统计分析也有一些这样的速查表，似乎容易被大众忽略。印象比较深的是统计之都上的一篇文章《翻译：常见统计检验的本质都是线性模型（或：如何教统计学）》，尽管这个表格并不是以速查表作为目的而设计。 使用 R 进行统计分析的速查表似乎较少见到，但“我”更愿意相信：我能想到的东西别人也能想到，只是还没有被自己发现。遂搜了一下，的确是有的，比如Statistics Cheat Sheets（Basic statistics with R Cheat Sheet），看来日后也可收集一二。 回到正题，这里所列的标准假设检验（Standard Hypothesis Testing）的速查表，是直接引用自 The R Software : Fundamentals of Programming and Statistical Analysis （p.447）及其中文翻译版《R软件教程与统计分析——入门到精通》（pp.406-407），供查阅参考。 Table 1 标准检验（中文译版） 本质 数据 有效性条件 R 函数 参数检验： 均值 单样本 \\(n  30\\) 或正态性 t.test(x,...) 两样本 正态性与同方差 t.test(x,y,...) 两样本 正态性 t.test(x,y,var.equal=F) 两配对样本 \\(n  30\\) 或正态性 t.test(x,y,paried=T) 方差 单样本 正态性 sigma2.test(x,...) 两样本 正态性 var.test(x,y,...) 两样本 大样本 asymp.test(x,y,...) 相关系数 单样本 正态性, \\(H_0:\\rho=\\rho_0\\) cor.test(x,y...) 两样本 正态性 cor.test.2.sample(x,y,...) 比例 单样本 \\(np≥5\\) 且 \\(n(1-p)≥5\\) prop.test(x,...) 单样本 binom.test(x,...) 两样本 大样本 prop.test(x,y,...) 独立性检验： \\(\\chi^2\\) 独立性检验 列联表 理论计数 \\(≥5\\) chisq.test(.,correct=F) Yates \\(\\chi^2\\) 检验 2×2 表 理论计数 \\(≥2.5\\) chisq.test() Fisher 精确检验 列联表 fisher.test() 一个分布的拟合效果的检验： Shapiro-Wilk 单样本 shapiro.text(x,...) 一个分布的拟合效果的 \\(\\chi^2\\) 检验 单样本 理论计数 \\(≥5\\) chisq.test() Kolmogorov-Smirnov 单样本 ks.test(x,.) 两样本 ks.test(x,y) 位置的检验： 中位数 单样本 binom.test(x,) 符号检验 两样本 fisher.test(x,y) 两配对样本 binom.test(x,y,paired=T) Mann-Whitney 两样本 \\(min(n_1,n_2)≥10\\) wilcox.test(x,y,exact=F) Mann-Whitney 两样本 \\(min(n_1,n_2)≤10\\) wilcox.test(x,y) Wilcoxon 两配对样本 wilcox.test(x,y,paried=T) 引自：Pierre Lafaye de Micheaux, Rémy Drouilhet, Benoit Liquet. 2013. The R Software: Fundamentals of Programming and Statistical Analysis. Springer, New York, NY. doi: 10.1007/978-1-4614-9020-3. p.447. 潘东东, 李启寨, 唐年胜, 译. 2015. R 软件教程与统计分析——入门到精通. 北京：高等教育出版社. pp.406-407. Table 2 Standard tests（英文原版） Nature Data Conditions for validaty R function Parametric tests Mean 1 sample \\(n 30\\) or normality t.test(x,...) 2 samples Normality and equal variances t.test(x,y,...) 2 samples Normality t.test(x,y,var.equal=F) 2 paired samples \\(n 30\\) or normality t.test(x,y,paried=T) Variance 1 sample Normality sigma2.test(x,...) 2 samples Normality var.test(x,y,...) 2 samples Large sample size asymp.test(x,y,...) Correlation 1 sample Normality, \\(H_0:\\rho=\\rho_0\\) cor.test(x,y) 2 samples Normality cor.test.2.sample(x,y) Proportion 1 sample \\(np≥5\\) and \\(n(n-p)≥5\\) prop.test(x,...) 1 sample binom.test(x,...) 2 samples Large sample size prop.test(x,y,...) Independence tests \\(\\chi^2\\) for independence contingency table Theoretical counts ≥ 5 chisq.test(.,correct=F) Yates' \\(\\chi^2\\) 2×2 table Theoretical counts ≥ 2.5 chisq.test() Fisher's exact test contingency table fisher.test() Tests of fit to a distribution Shapiro-Wilk 1 sample shapiro.test(x,...) \\(\\chi^2\\) of fit to a distribution 1 sample Theoretical counts ≥ 5 chisq.test() Kolmogorov-Smirnov 1 sample ks.test(x,.) 2 samples ks.test(x,y) Tests of position Median 1 sample binom.test(x,.) Sign test 2 samples fisher.test(x,y) 2 paired samples binom.test(x,y,paried=T) Mann-Whitney 2 samples \\(min(n_1,n_2)≥10\\) wilcox.test(x,y,exact=F) Mann-Whitney 2 samples \\(min(n_1,n_2)≤10\\) wilcox.test(x,y) Wilcoxon 2 paired samples wilcox.test(x,y,paired=T) ","title":"R 速查表：标准假设检验","uri":"/n/21/08/r-cheatsheet-standard-tests/"},{"content":"所有文章（含笔记、综述、翻译、推荐等）列表：\n2021   2021/10/10 飞檐走壁，漫山越岭   2021/10/10 正则表达式简明指南   2021/10/05 xaringan + remark.js 制作幻灯片   2021/10/04 Markdown 简明指南   2021/09/17 搜索引擎之间一键相互跳转脚本   2021/09/16 科技文章自定义词语高亮显示   2021/08/23 科技文章标题翻译脚本   2021/08/06 R 方差分析：以多物种、双因素为例   2021/08/05 在 Markdown、R Markdown 中使用表格   2021/08/04 R 速查表：标准假设检验   ","title":"归档","uri":"/archives/"}]
